name: Admin Tasks

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Manual action to perform'
        required: true
        type: choice
        options:
          - restore-db
          - rollback-api
      branch:
        description: 'Branch to restore backup from (only for restore-db)'
        required: false
        type: choice
        options:
          - main
          - homolog
      dump_file:
        description: 'Name of the .dump file (e.g. backup_2025-08-05.dump)'
        required: false
      api_version:
        description: 'API version to rollback to (e.g. v1.2.3)'
        required: false

jobs:
  restore-db:
    if: ${{ github.event.inputs.action == 'restore-db' }}
    name: Restore Supabase Database Backup
    runs-on: ubuntu-latest

    steps:
      - name: Install pg_restore
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Download backup file from Cloudflare R2
        uses: jakejarvis/s3-sync-action@master
        env:
          AWS_S3_BUCKET: ${{ secrets.R2_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          AWS_REGION: "auto"
          S3_ENDPOINT: ${{ secrets.R2_ENDPOINT_URL }}
          SOURCE_DIR: "db-dumps/${{ github.event.inputs.branch }}"
          DEST_DIR: "."
        with:
          args: --exclude "*" --include "${{ github.event.inputs.dump_file }}"

      - name: Restore database to Supabase
        env:
          DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        run: |
          echo "‚è≥ Restoring from file: ${{ github.event.inputs.dump_file }}"

          pg_restore \
            --no-owner \
            --no-privileges \
            --clean \
            --if-exists \
            --dbname="$DB_URL" \
            "${{ github.event.inputs.dump_file }}"

          echo "‚úÖ Database restore completed!"

  rollback-api:
    if: ${{ github.event.inputs.action == 'rollback-api' }}
    name: Rollback API Version on Fly.io
    runs-on: ubuntu-latest

    steps:
      - name: Verify Flyctl installation
        uses: superfly/flyctl-actions@1.4
        with:
          args: version

      - name: Rollback to specified API version
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          API_VERSION: ${{ github.event.inputs.api_version }}
          GITHUB_REF: ${{ github.ref }}
        run: |
          echo "üöÄ Rolling back API to version: $API_VERSION"

          if [[ "$GITHUB_REF" == "refs/heads/main" ]]; then
            FLY_CONFIG="fly.toml"
            APP_NAME="api-aierview" 
          else
            FLY_CONFIG="fly.homolog.toml"
            APP_NAME="api-aierview-homolog" 
          fi

          flyctl deploy --remote-only --config "$FLY_CONFIG" --image "registry.fly.io/$APP_NAME:$API_VERSION"

          echo "‚úÖ API rollback completed!"

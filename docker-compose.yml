version: '3.9'

services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - aierview-network

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - aierview-network

  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: "-Xms32M -Xmx64M"
    networks:
      - aierview-network

  tts-service:
    build:
      context: tts-service/
    container_name: tts-service
    depends_on:
      - kafka
    ports:
      - "4000:4000"
    environment:
      - KAFKA_BOOTSTRAP=kafka:9092
      - R2_ENDPOINT
      - R2_ACCESS_KEY
      - R2_SECRET_KEY

    networks:
      - aierview-network

  db:
    container_name: aierview-db
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=aierview
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - aierview-network

  redis:
    image: redis:7.2-alpine
    container_name: aierview-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: [ "redis-server", "--appendonly", "yes" ]
    restart: always
    networks:
      - aierview-network

  backend:
    build:
      context: .
    container_name: aierview-backend
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      ## DATABASE CONFIGURATION
      - SPRING_DATASOURCE_URL=jdbc:postgresql://aierview-db:5432/aierview
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_SHOW_SQL=false
      - SPRING_DEVTOOLS_RESTART_ENABLED=FALSE
      - SPRING_DEVTOOLS_LIVERELOAD_ENABLED=FALSE
    command: mvn spring-boot:run
    networks:
      - aierview-network

volumes:
  pgdata:
  redis-data:

networks:
  aierview-network:
    driver: bridge

